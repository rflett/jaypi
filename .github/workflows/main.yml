name: Go

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - source/**
      - serverless.yml
      - .github/workflows/main.yml

env:
  AWS_DEFAULT_REGION: ap-southeast-2

jobs:
  build:
    name: Go Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - outFile: signup
            sourcePath: rest/account/signup/main.go
          - outFile: signin
            sourcePath: rest/account/signin/main.go
          - outFile: validateJwt
            sourcePath: rest/account/validateJwt/main.go
          - outFile: oauthAuthenticate
            sourcePath: rest/oauth/authenticate/main.go
          - outFile: oauthCallback
            sourcePath: rest/oauth/callback/main.go
          - outFile: registerDevice
            sourcePath: rest/device/registerDevice/main.go
          - outFile: deregisterDevice
            sourcePath: rest/device/deregisterDevice/main.go
          - outFile: getUser
            sourcePath: rest/user/getUser/main.go
          - outFile: updateUser
            sourcePath: rest/user/updateUser/main.go
          - outFile: getAvatarURL
            sourcePath: rest/user/getAvatarURL/main.go
          - outFile: createGroup
            sourcePath: rest/group/createGroup/main.go
          - outFile: getGroup
            sourcePath: rest/group/getGroup/main.go
          - outFile: deleteGroup
            sourcePath: rest/group/deleteGroup/main.go
          - outFile: getGroupMembers
            sourcePath: rest/group/getGroupMembers/main.go
          - outFile: updateGroup
            sourcePath: rest/group/updateGroup/main.go
          - outFile: joinGroup
            sourcePath: rest/group/joinGroup/main.go
          - outFile: leaveGroup
            sourcePath: rest/group/leaveGroup/main.go
          - outFile: getGroupQR
            sourcePath: rest/group/getGroupQR/main.go
          - outFile: createGame
            sourcePath: rest/group/createGame/main.go
          - outFile: deleteGame
            sourcePath: rest/group/deleteGame/main.go
          - outFile: updateGame
            sourcePath: rest/group/updateGame/main.go
          - outFile: getGames
            sourcePath: rest/group/getGames/main.go
          - outFile: songSearch
            sourcePath: rest/song/songSearch/main.go
          - outFile: createVote
            sourcePath: rest/votes/createVote/main.go
          - outFile: deleteVote
            sourcePath: rest/votes/deleteVote/main.go
          - outFile: chuneMachine
            sourcePath: lambda/chune-machine/main.go
          - outFile: beanCounter
            sourcePath: lambda/bean-counter/main.go
          - outFile: scoreTaker
            sourcePath: lambda/score-taker/main.go
          - outFile: authorizer
            sourcePath: lambda/authorizer/main.go
          - outFile: townCrier
            sourcePath: lambda/town-crier/main.go
    env:
      GOOS: linux
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Go Dependencies
        working-directory: source/
        run: go mod download

      - name: Build
        working-directory: source/
        run: go build -ldflags="-s -w" -o bin/${{ matrix.outFile}} ${{ matrix.sourcePath }}

      - run: ls -alh

      - run: ls -alh
        working-directory: source/

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.outFile }}
          path: bin/${{ matrix.outFile }}

  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: build
    env:
      GOOS: linux
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: NPM Dependencies
        run: npm install -g serverless serverless-dotenv-plugin

      - uses: actions/download-artifact@v2
        with:
          path: source/bin

      - run: ls -alh

      - run: ls -alh
        working-directory: source/bin

      - name: Set file permissions
        working-directory: source/bin
        run: chmod 755 $(find . -type f)

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JWT_VERIFY_KEY: ${{ secrets.JWT_VERIFY_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_SECRET_ID: ${{ secrets.GOOGLE_SECRET_ID }}
          FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
          FACEBOOK_SECRET_ID: ${{ secrets.FACEBOOK_SECRET_ID }}
          GH_SECRET_ID: ${{ secrets.GH_CLIENT_ID }}
          GH_CLIENT_ID: ${{ secrets.GH_SECRET_ID }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_SECRET_ID: ${{ secrets.SPOTIFY_SECRET_ID }}
        run: serverless deploy --verbose --stage staging --release "jaypi@${GITHUB_SHA:0:8}"
