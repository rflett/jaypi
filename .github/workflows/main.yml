name: Go

on:
  push:
    branches: [ main ]
    paths:
      - source/**
      - serverless.yml

env:
  AWS_DEFAULT_REGION: ap-southeast-2

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      GOOS: linux
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Get Dependencies
        working-directory: source/
        run: go mod download

      - name: Build
        working-directory: source/
        run: |
          go build -ldflags="-s -w" -o bin/signup             rest/account/signup/main.go
          go build -ldflags="-s -w" -o bin/signin             rest/account/signin/main.go
          go build -ldflags="-s -w" -o bin/oauthAuthenticate  rest/oauth/authenticate/main.go
          go build -ldflags="-s -w" -o bin/oauthCallback      rest/oauth/callback/main.go

          go build -ldflags="-s -w" -o bin/registerDevice     rest/device/registerDevice/main.go
          go build -ldflags="-s -w" -o bin/deregisterDevice   rest/device/deregisterDevice/main.go

          go build -ldflags="-s -w" -o bin/getUser            rest/user/getUser/main.go
          go build -ldflags="-s -w" -o bin/updateUser         rest/user/updateUser/main.go
          go build -ldflags="-s -w" -o bin/getAvatarURL       rest/user/getAvatarURL/main.go

          go build -ldflags="-s -w" -o bin/createGroup        rest/group/createGroup/main.go
          go build -ldflags="-s -w" -o bin/getGroup           rest/group/getGroup/main.go
          go build -ldflags="-s -w" -o bin/getGroupMembers    rest/group/getGroupMembers/main.go
          go build -ldflags="-s -w" -o bin/updateGroup        rest/group/updateGroup/main.go
          go build -ldflags="-s -w" -o bin/joinGroup          rest/group/joinGroup/main.go
          go build -ldflags="-s -w" -o bin/leaveGroup         rest/group/leaveGroup/main.go
          go build -ldflags="-s -w" -o bin/getGroupQR         rest/group/getGroupQR/main.go
          go build -ldflags="-s -w" -o bin/createGame         rest/group/createGame/main.go
          go build -ldflags="-s -w" -o bin/deleteGame         rest/group/deleteGame/main.go
          go build -ldflags="-s -w" -o bin/updateGame         rest/group/updateGame/main.go
          go build -ldflags="-s -w" -o bin/getGames           rest/group/getGames/main.go

          go build -ldflags="-s -w" -o bin/songSearch         rest/song/songSearch/main.go

          go build -ldflags="-s -w" -o bin/createVote         rest/votes/createVote/main.go
          go build -ldflags="-s -w" -o bin/deleteVote         rest/votes/deleteVote/main.go

          go build -ldflags="-s -w" -o bin/chuneMachine       lambda/chune-machine/main.go
          go build -ldflags="-s -w" -o bin/beanCounter        lambda/bean-counter/main.go
          go build -ldflags="-s -w" -o bin/scoreTaker         lambda/score-taker/main.go
          go build -ldflags="-s -w" -o bin/authorizer         lambda/authorizer/main.go
          go build -ldflags="-s -w" -o bin/townCrier          lambda/town-crier/main.go

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install serverless
        run: npm install -g serverless serverless-dotenv-plugin

      - name: Set file permissions
        working-directory: source/bin
        run: chmod 755 $(find . -type f)

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JWT_VERIFY_KEY: ${{ secrets.JWT_VERIFY_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_SECRET_ID: ${{ secrets.GOOGLE_SECRET_ID }}
          FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
          FACEBOOK_SECRET_ID: ${{ secrets.FACEBOOK_SECRET_ID }}
          GH_SECRET_ID: ${{ secrets.GH_CLIENT_ID }}
          GH_CLIENT_ID: ${{ secrets.GH_SECRET_ID }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_SECRET_ID: ${{ secrets.SPOTIFY_SECRET_ID }}
        run: serverless deploy --verbose --stage staging
