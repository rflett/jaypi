{
	"info": {
		"_postman_id": "a0a2a637-2943-45c2-9aad-d6c04d10270f",
		"name": "JJJ API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Votes",
					"item": [
						{
							"name": "Create Vote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"songID\": \"5gAYA4sD2wooB2TVmyqJ6s\",\r\n  \"name\": \"The Strain\",\r\n  \"artist\": \"Haken\",\r\n  \"position\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/{{userID}}/vote",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"{{userID}}",
										"vote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Vote",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/user/{{userID}}/vote/{{songID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"{{userID}}",
										"vote",
										"{{songID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Check userID is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('userID');\r",
									"});\r",
									"pm.environment.set(\"userID\", jsonData.userID);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Ryan\",\r\n  \"lastName\": \"Flett\",\r\n  \"nickName\": \"fletty\",\r\n  \"email\": \"ryan.flett1@gmail.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user",
							"host": [
								"{{host}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nickName\": \"flettel\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Check groupID is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('groupID');\r",
									"});\r",
									"pm.environment.set(\"groupID\", jsonData.groupID);\r",
									"\r",
									"\r",
									"pm.test(\"Check code is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('code');\r",
									"});\r",
									"pm.environment.set(\"groupCode\", jsonData.code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"fleet's gang\",\r\n  \"ownerID\": \"{{userID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/group",
							"host": [
								"{{host}}"
							],
							"path": [
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/group/{{groupID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group QR",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/group/{{groupID}}/qr",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}",
								"qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"flettel's group\",\r\n  \"ownerID\": \"{{userID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/group/{{groupID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Join Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userID\": \"{{userID}}\",\r\n    \"code\": \"{{groupCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/group/join",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/group/{{groupID}}/user/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}",
								"user",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Spotify",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"response is ok\", function () {\r",
									"//     pm.response.to.have.status(201);\r",
									"// });\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Check access_token is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('access_token');\r",
									"});\r",
									"pm.environment.set(\"spotifyAccessToken\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{spotifyClientAuth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://accounts.spotify.com/api/token",
							"protocol": "https",
							"host": [
								"accounts",
								"spotify",
								"com"
							],
							"path": [
								"api",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.spotify.com/v1/search?q=Something+About+Being+Sixteen+Teenage+Joans&type=track&limit=3",
							"protocol": "https",
							"host": [
								"api",
								"spotify",
								"com"
							],
							"path": [
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Something+About+Being+Sixteen+Teenage+Joans"
								},
								{
									"key": "type",
									"value": "track"
								},
								{
									"key": "market",
									"value": "AU",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{spotifyAccessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "JJJ",
			"item": [
				{
					"name": "Now Playing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://music.abcradio.net.au/api/v1/plays/triplej/now.json?tz=Australia/Sydney",
							"protocol": "https",
							"host": [
								"music",
								"abcradio",
								"net",
								"au"
							],
							"path": [
								"api",
								"v1",
								"plays",
								"triplej",
								"now.json"
							],
							"query": [
								{
									"key": "tz",
									"value": "Australia/Sydney"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": ""
		},
		{
			"key": "userID",
			"value": ""
		}
	]
}