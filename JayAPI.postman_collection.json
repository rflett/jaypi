{
	"info": {
		"_postman_id": "a0a2a637-2943-45c2-9aad-d6c04d10270f",
		"name": "JJJ API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Device",
					"item": [
						{
							"name": "Register Android",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"c72KXyfkmVI:APA91bFOPpz8snvRkMDXjpi7YaMYhPBnazfznCxC9tmMkNXWLvfv-eoZaH1Z0aFywYFgAQi77FVc9U0L0TVWO9t-s7GGJswOonZl8Sc2lkaLlH7X0qWvzlCQUXTuiOmN_wuRleJzA-dG\",\r\n    \"platform\": \"android\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/device",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Apple",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"309f3f8e8238246b50ef5380fda11e75ab586dc11fae31eedc0a03849fd6b16c\",\r\n    \"platform\": \"ios\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/device",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deregister",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"endpoint\": \"arn:aws:sns:ap-southeast-2:292374005836:endpoint/GCM/google-fcm-notifications-dev/99e98b0e-292c-3859-8236-f3a9ea2e0f07\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/device",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"device"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nickName\": \"flettel\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user",
							"host": [
								"{{host}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/{{userID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Vote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"position\": 1,\r\n    \"song\": {\r\n        \"songID\": \"294Qb8EGfUjmZhaxROiLiV\",\r\n        \"name\": \"Bleak\",\r\n        \"album\": \"Blackwater Park\",\r\n        \"artist\": \"Opeth\",\r\n        \"artwork\": [\r\n            {\r\n                \"url\": \"https://i.scdn.co/image/ab67616d0000b273f32111c6eea621e6468dccbc\",\r\n                \"width\": 640,\r\n                \"height\": 640\r\n            },\r\n            {\r\n                \"url\": \"https://i.scdn.co/image/ab67616d00001e02f32111c6eea621e6468dccbc\",\r\n                \"width\": 300,\r\n                \"height\": 300\r\n            },\r\n            {\r\n                \"url\": \"https://i.scdn.co/image/ab67616d00004851f32111c6eea621e6468dccbc\",\r\n                \"width\": 64,\r\n                \"height\": 64\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/vote",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Vote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"songID\": \"5gAYA4sD2wooB2TVmyqJ6s\",\r\n  \"name\": \"The Strain\",\r\n  \"artist\": \"Haken\",\r\n  \"position\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/vote/{{songID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"vote",
								"{{songID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Check groupID is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('groupID');\r",
									"});\r",
									"pm.environment.set(\"groupID\", jsonData.groupID);\r",
									"\r",
									"\r",
									"pm.test(\"Check code is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('code');\r",
									"});\r",
									"pm.environment.set(\"groupCode\", jsonData.code);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"fletty's other gang\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/group",
							"host": [
								"{{host}}"
							],
							"path": [
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"flettel's group\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/group/{{groupID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/group/{{groupID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group QR",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/group/{{groupID}}/qr",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"{{groupID}}",
								"qr"
							]
						}
					},
					"response": []
				},
				{
					"name": "Join Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"{{groupCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/group/membership",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"membership"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/group/membership",
							"host": [
								"{{host}}"
							],
							"path": [
								"group",
								"membership"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OAuth",
			"item": [
				{
					"name": "Authenticate",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/oauth/google/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth",
								"google",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Callback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var userData = jsonData.user;\r",
									"\r",
									"pm.test(\"Check userID is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('user');\r",
									"    pm.expect(userData).to.have.property('userID');\r",
									"});\r",
									"pm.environment.set(\"userID\", userData.userID);\r",
									"\r",
									"pm.test(\"Check token is in response\", function() {\r",
									"    pm.expect(jsonData).to.have.property('token');\r",
									"    pm.expect(jsonData).to.have.property('tokenType');\r",
									"})\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"tokenType\", jsonData.tokenType);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/oauth/google/redirect?state=13f5f394-6f7f-4949-b981-c4c29b6c6299&code=4%2F0AY0e-g5hLNENRpLJ1sZRw7np3po8iOAhhb4e4NcZHRQi7trnERzF0Ie6kQntMa4zjhC5iQ&scope=email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile&authuser=0&hd=delegator.com.au&prompt=none",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth",
								"google",
								"redirect"
							],
							"query": [
								{
									"key": "state",
									"value": "13f5f394-6f7f-4949-b981-c4c29b6c6299"
								},
								{
									"key": "code",
									"value": "4%2F0AY0e-g5hLNENRpLJ1sZRw7np3po8iOAhhb4e4NcZHRQi7trnERzF0Ie6kQntMa4zjhC5iQ"
								},
								{
									"key": "scope",
									"value": "email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile"
								},
								{
									"key": "authuser",
									"value": "0"
								},
								{
									"key": "hd",
									"value": "delegator.com.au"
								},
								{
									"key": "prompt",
									"value": "none"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var userData = jsonData.user;\r",
									"\r",
									"pm.test(\"Check userID is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('user');\r",
									"    pm.expect(userData).to.have.property('userID');\r",
									"});\r",
									"pm.environment.set(\"userID\", userData.userID);\r",
									"\r",
									"pm.test(\"Check token is in response\", function() {\r",
									"    pm.expect(jsonData).to.have.property('token');\r",
									"    pm.expect(jsonData).to.have.property('tokenType');\r",
									"})\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"tokenType\", jsonData.tokenType);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Ryan Flett\",\r\n  \"nickName\": \"fletty\",\r\n  \"email\": \"ryan.flett1@gmail.com\",\r\n  \"password\": \"ryanflett\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/account/signup",
							"host": [
								"{{host}}"
							],
							"path": [
								"account",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var userData = jsonData.user;\r",
									"\r",
									"pm.test(\"Check userID is in response\", function () {\r",
									"    pm.expect(jsonData).to.have.property('user');\r",
									"    pm.expect(userData).to.have.property('userID');\r",
									"});\r",
									"pm.environment.set(\"userID\", userData.userID);\r",
									"\r",
									"pm.test(\"Check token is in response\", function() {\r",
									"    pm.expect(jsonData).to.have.property('token');\r",
									"    pm.expect(jsonData).to.have.property('tokenType');\r",
									"})\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"tokenType\", jsonData.tokenType);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"ryan.flett1@gmail.com\",\r\n  \"password\": \"ryanflett\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/account/signin",
							"host": [
								"{{host}}"
							],
							"path": [
								"account",
								"signin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Vendor",
			"item": [
				{
					"name": "Spotify",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"response is ok\", function () {\r",
											"//     pm.response.to.have.status(201);\r",
											"// });\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Check access_token is in response\", function () {\r",
											"    pm.expect(jsonData).to.have.property('access_token');\r",
											"});\r",
											"pm.environment.set(\"spotifyAccessToken\", jsonData.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{spotifyClientAuth}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://accounts.spotify.com/api/token",
									"protocol": "https",
									"host": [
										"accounts",
										"spotify",
										"com"
									],
									"path": [
										"api",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{spotifyAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.spotify.com/v1/search?q=Something+About+Being+Sixteen+Teenage+Joans&type=track&limit=3",
									"protocol": "https",
									"host": [
										"api",
										"spotify",
										"com"
									],
									"path": [
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "Something+About+Being+Sixteen+Teenage+Joans"
										},
										{
											"key": "type",
											"value": "track"
										},
										{
											"key": "market",
											"value": "AU",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "JJJ",
					"item": [
						{
							"name": "Now Playing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://music.abcradio.net.au/api/v1/plays/triplej/now.json?tz=Australia/Sydney",
									"protocol": "https",
									"host": [
										"music",
										"abcradio",
										"net",
										"au"
									],
									"path": [
										"api",
										"v1",
										"plays",
										"triplej",
										"now.json"
									],
									"query": [
										{
											"key": "tz",
											"value": "Australia/Sydney"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Song",
			"item": [
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/search?query=opeth+bleak",
							"host": [
								"{{host}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "opeth+bleak"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": ""
		},
		{
			"key": "userID",
			"value": ""
		}
	]
}